{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/dev-kazika-studio/kazika-studio/lib/supabase/client.ts"],"sourcesContent":["import { createBrowserClient } from '@supabase/ssr';\n\nexport function createClient() {\n  return createBrowserClient(\n    process.env.NEXT_PUBLIC_SUPABASE_URL!,\n    process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n  );\n}\n"],"names":[],"mappings":";;;;AAII;AAJJ;AAAA;;AAEO,SAAS;IACd,OAAO,IAAA,oMAAmB;AAI5B","debugId":null}},
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/dev-kazika-studio/kazika-studio/app/components/Header.tsx"],"sourcesContent":["'use client';\n\nimport { useEffect, useState } from 'react';\nimport { createClient } from '@/lib/supabase/client';\nimport { useRouter, usePathname } from 'next/navigation';\nimport { LogOut, User, Workflow, Home } from 'lucide-react';\nimport type { User as SupabaseUser } from '@supabase/supabase-js';\nimport Link from 'next/link';\n\nexport default function Header() {\n  const [user, setUser] = useState<SupabaseUser | null>(null);\n  const router = useRouter();\n  const pathname = usePathname();\n  const supabase = createClient();\n\n  useEffect(() => {\n    // 初期ユーザー取得\n    supabase.auth.getUser().then(({ data: { user } }) => {\n      setUser(user);\n    });\n\n    // 認証状態の変化を監視\n    const {\n      data: { subscription },\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      setUser(session?.user ?? null);\n    });\n\n    return () => subscription.unsubscribe();\n  }, [supabase]);\n\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n    router.push('/login');\n    router.refresh();\n  };\n\n  if (!user) return null;\n\n  return (\n    <header className=\"bg-white dark:bg-gray-800 border-b border-gray-200 dark:border-gray-700 sticky top-0 z-50\">\n      <div className=\"container mx-auto px-4 py-3 max-w-7xl\">\n        <div className=\"flex items-center justify-between\">\n          {/* ロゴとナビゲーション */}\n          <div className=\"flex items-center gap-6\">\n            <Link href=\"/\" className=\"flex items-center gap-2 text-lg font-semibold text-gray-900 dark:text-white hover:text-blue-600 dark:hover:text-blue-400 transition-colors\">\n              <Workflow size={24} />\n              <span>Kazika Studio</span>\n            </Link>\n            <nav className=\"flex items-center gap-4\">\n              <Link\n                href=\"/\"\n                className={`flex items-center gap-2 px-3 py-2 text-sm rounded-lg transition-colors ${\n                  pathname === '/'\n                    ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n                    : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                }`}\n              >\n                <Home size={16} />\n                ホーム\n              </Link>\n              <Link\n                href=\"/workflow\"\n                className={`flex items-center gap-2 px-3 py-2 text-sm rounded-lg transition-colors ${\n                  pathname === '/workflow'\n                    ? 'bg-blue-100 dark:bg-blue-900 text-blue-700 dark:text-blue-300'\n                    : 'text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700'\n                }`}\n              >\n                <Workflow size={16} />\n                ワークフロー\n              </Link>\n            </nav>\n          </div>\n\n          {/* ユーザー情報とログアウト */}\n          <div className=\"flex items-center gap-4\">\n            <div className=\"flex items-center gap-2\">\n              <User size={20} className=\"text-gray-600 dark:text-gray-400\" />\n              <span className=\"text-sm text-gray-700 dark:text-gray-300\">\n                {user.email}\n              </span>\n            </div>\n            <button\n              onClick={handleLogout}\n              className=\"flex items-center gap-2 px-3 py-2 text-sm text-gray-700 dark:text-gray-300 hover:bg-gray-100 dark:hover:bg-gray-700 rounded-lg transition-colors\"\n            >\n              <LogOut size={16} />\n              ログアウト\n            </button>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;;;AAPA;;;;;;AASe,SAAS;;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,yKAAQ,EAAsB;IACtD,MAAM,SAAS,IAAA,kJAAS;IACxB,MAAM,WAAW,IAAA,oJAAW;IAC5B,MAAM,WAAW,IAAA,4IAAY;IAE7B,IAAA,0KAAS;4BAAC;YACR,WAAW;YACX,SAAS,IAAI,CAAC,OAAO,GAAG,IAAI;oCAAC,CAAC,EAAE,MAAM,EAAE,IAAI,EAAE,EAAE;oBAC9C,QAAQ;gBACV;;YAEA,aAAa;YACb,MAAM,EACJ,MAAM,EAAE,YAAY,EAAE,EACvB,GAAG,SAAS,IAAI,CAAC,iBAAiB;oCAAC,CAAC,QAAQ;oBAC3C,QAAQ,SAAS,QAAQ;gBAC3B;;YAEA;oCAAO,IAAM,aAAa,WAAW;;QACvC;2BAAG;QAAC;KAAS;IAEb,MAAM,eAAe;QACnB,MAAM,SAAS,IAAI,CAAC,OAAO;QAC3B,OAAO,IAAI,CAAC;QACZ,OAAO,OAAO;IAChB;IAEA,IAAI,CAAC,MAAM,OAAO;IAElB,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;sBACb,cAAA,6LAAC;gBAAI,WAAU;;kCAEb,6LAAC;wBAAI,WAAU;;0CACb,6LAAC,0KAAI;gCAAC,MAAK;gCAAI,WAAU;;kDACvB,6LAAC,yNAAQ;wCAAC,MAAM;;;;;;kDAChB,6LAAC;kDAAK;;;;;;;;;;;;0CAER,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,0KAAI;wCACH,MAAK;wCACL,WAAW,CAAC,uEAAuE,EACjF,aAAa,MACT,kEACA,6EACJ;;0DAEF,6LAAC,8MAAI;gDAAC,MAAM;;;;;;4CAAM;;;;;;;kDAGpB,6LAAC,0KAAI;wCACH,MAAK;wCACL,WAAW,CAAC,uEAAuE,EACjF,aAAa,cACT,kEACA,6EACJ;;0DAEF,6LAAC,yNAAQ;gDAAC,MAAM;;;;;;4CAAM;;;;;;;;;;;;;;;;;;;kCAO5B,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;;kDACb,6LAAC,6MAAI;wCAAC,MAAM;wCAAI,WAAU;;;;;;kDAC1B,6LAAC;wCAAK,WAAU;kDACb,KAAK,KAAK;;;;;;;;;;;;0CAGf,6LAAC;gCACC,SAAS;gCACT,WAAU;;kDAEV,6LAAC,uNAAM;wCAAC,MAAM;;;;;;oCAAM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAQlC;GAtFwB;;QAEP,kJAAS;QACP,oJAAW;;;KAHN","debugId":null}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":["file:///workspaces/dev-kazika-studio/kazika-studio/app/components/LayoutClient.tsx"],"sourcesContent":["'use client';\n\nimport { usePathname } from 'next/navigation';\nimport Header from './Header';\n\nexport default function LayoutClient({\n  children,\n}: {\n  children: React.ReactNode;\n}) {\n  const pathname = usePathname();\n\n  // ログインページではヘッダーを表示しない\n  const hideHeader = pathname === '/login';\n\n  return (\n    <>\n      {!hideHeader && <Header />}\n      {children}\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;;AAEA;AACA;;;AAHA;;;AAKe,SAAS,aAAa,EACnC,QAAQ,EAGT;;IACC,MAAM,WAAW,IAAA,oJAAW;IAE5B,sBAAsB;IACtB,MAAM,aAAa,aAAa;IAEhC,qBACE;;YACG,CAAC,4BAAc,6LAAC,0IAAM;;;;;YACtB;;;AAGP;GAhBwB;;QAKL,oJAAW;;;KALN","debugId":null}}]
}